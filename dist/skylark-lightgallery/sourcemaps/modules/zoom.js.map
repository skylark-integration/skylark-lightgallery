{"version":3,"sources":["modules/zoom.js"],"names":["define","$","lightGallery","useLeft","isChrome","defaults","scale","zoom","actualSize","enableZoomAfter","useLeftForZoom","navigator","userAgent","match","parseInt","Zoom","element","this","core","data","s","extend","doCss","init","zoomabletimeout","pageX","window","width","pageY","height","scrollTop","prototype","_this","zoomIcons","$outer","addClass","find","append","$el","on","event","index","delay","_speed","hasClass","removeClass","setTimeout","$slide","eq","scaleVal","$image","offsetX","prop","offsetY","x","y","css","attr","parent","left","top","callScale","resetZoom","fromIcon","nw","w","dynamic","dynamicEl","naturalWidth","$items","originalEvent","targetTouches","tapped","clearTimeout","preventDefault","length","zoomDrag","zoomSwipe","getCurrentTransform","el","st","getComputedStyle","tm","getPropertyValue","split","getCurrentRotation","values","Math","round","atan2","PI","getModifier","rotateValue","axis","originalRotate","abs","transformValues","modifier","flipHorizontalValue","sign","parseFloat","flipVerticalValue","sinX","sinMinusX","getImageSize","getDragCords","e","getSwipeCords","getPossibleDragCords","minY","maxY","minX","maxX","getDragAllowedAxises","allowY","allowX","removeAttr","rotateEl","startCoords","endCoords","isMoved","dragAllowedAxises","distanceX","distanceY","_$el","touchendZoom","isDraging","target","scrollLeft","possibleDragCords","destroy","off","fn","modules"],"mappings":"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","file":"../../modules/zoom.js","sourcesContent":["define([\n    \"skylark-jquery\",\n    \"../light-gallery\"\n],function($,lightGallery){\n\n    'use strict';\n\n    var getUseLeft = function() {\n        var useLeft = false;\n        var isChrome = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n        if (isChrome && parseInt(isChrome[2], 10) < 54) {\n            useLeft = true;\n        }\n\n        return useLeft;\n    };\n\n    var defaults = {\n        scale: 1,\n        zoom: true,\n        actualSize: true,\n        enableZoomAfter: 300,\n        useLeftForZoom: getUseLeft()\n    };\n\n    var Zoom = function(element) {\n\n        this.core = $(element).data('lightGallery');\n\n        this.core.s = $.extend({}, defaults, this.core.s);\n\n        if (this.core.s.zoom && this.core.doCss()) {\n            this.init();\n\n            // Store the zoomable timeout value just to clear it while closing\n            this.zoomabletimeout = false;\n\n            // Set the initial value center\n            this.pageX = $(window).width() / 2;\n            this.pageY = ($(window).height() / 2) + $(window).scrollTop();\n        }\n\n        return this;\n    };\n\n    Zoom.prototype.init = function() {\n\n        var _this = this;\n        var zoomIcons = '<button type=\"button\" aria-label=\"Zoom in\" id=\"lg-zoom-in\" class=\"lg-icon\"></button><button type=\"button\" aria-label=\"Zoom out\" id=\"lg-zoom-out\" class=\"lg-icon\"></button>';\n\n        if (_this.core.s.actualSize) {\n            zoomIcons += '<button type=\"button\" aria-label=\"Actual size\" id=\"lg-actual-size\" class=\"lg-icon\"></button>';\n        }\n\n        if (_this.core.s.useLeftForZoom) {\n            _this.core.$outer.addClass('lg-use-left-for-zoom');\n        } else {\n            _this.core.$outer.addClass('lg-use-transition-for-zoom');\n        }\n\n        this.core.$outer.find('.lg-toolbar').append(zoomIcons);\n\n        // Add zoomable class\n        _this.core.$el.on('onSlideItemLoad.lg.tm.zoom', function(event, index, delay) {\n\n            // delay will be 0 except first time\n            var _speed = _this.core.s.enableZoomAfter + delay;\n\n            // set _speed value 0 if gallery opened from direct url and if it is first slide\n            if ($('body').hasClass('lg-from-hash') && delay) {\n\n                // will execute only once\n                _speed = 0;\n            } else {\n\n                // Remove lg-from-hash to enable starting animation.\n                $('body').removeClass('lg-from-hash');\n            }\n\n            _this.zoomabletimeout = setTimeout(function() {\n                _this.core.$slide.eq(index).addClass('lg-zoomable');\n            }, _speed + 30);\n        });\n\n        var scale = 1;\n        /**\n         * @desc Image zoom\n         * Translate the wrap and scale the image to get better user experience\n         *\n         * @param {String} scaleVal - Zoom decrement/increment value\n         */\n        var zoom = function(scaleVal) {\n\n            var $image = _this.core.$outer.find('.lg-current .lg-image');\n            var _x;\n            var _y;\n\n            // Find offset manually to avoid issue after zoom\n            var offsetX = ($(window).width() - $image.prop('offsetWidth')) / 2;\n            var offsetY = (($(window).height() - $image.prop('offsetHeight')) / 2) + $(window).scrollTop();\n\n            _x = _this.pageX - offsetX;\n            _y = _this.pageY - offsetY;\n\n            var x = (scaleVal - 1) * (_x);\n            var y = (scaleVal - 1) * (_y);\n\n            $image.css('transform', 'scale3d(' + scaleVal + ', ' + scaleVal + ', 1)').attr('data-scale', scaleVal);\n\n            if (_this.core.s.useLeftForZoom) {\n                $image.parent().css({\n                    left: -x + 'px',\n                    top: -y + 'px'\n                }).attr('data-x', x).attr('data-y', y);\n            } else {\n                $image.parent().css('transform', 'translate3d(-' + x + 'px, -' + y + 'px, 0)').attr('data-x', x).attr('data-y', y);\n            }\n        };\n\n        var callScale = function() {\n            if (scale > 1) {\n                _this.core.$outer.addClass('lg-zoomed');\n            } else {\n                _this.resetZoom();\n            }\n\n            if (scale < 1) {\n                scale = 1;\n            }\n\n            zoom(scale);\n        };\n\n        var actualSize = function(event, $image, index, fromIcon) {\n            var w = $image.prop('offsetWidth');\n            var nw;\n            if (_this.core.s.dynamic) {\n                nw = _this.core.s.dynamicEl[index].width || $image[0].naturalWidth || w;\n            } else {\n                nw = _this.core.$items.eq(index).attr('data-width') || $image[0].naturalWidth || w;\n            }\n\n            var _scale;\n\n            if (_this.core.$outer.hasClass('lg-zoomed')) {\n                scale = 1;\n            } else {\n                if (nw > w) {\n                    _scale = nw / w;\n                    scale = _scale || 2;\n                }\n            }\n\n            if (fromIcon) {\n                _this.pageX = $(window).width() / 2;\n                _this.pageY = ($(window).height() / 2) + $(window).scrollTop();\n            } else {\n                _this.pageX = event.pageX || event.originalEvent.targetTouches[0].pageX;\n                _this.pageY = event.pageY || event.originalEvent.targetTouches[0].pageY;\n            }\n\n            callScale();\n            setTimeout(function() {\n                _this.core.$outer.removeClass('lg-grabbing').addClass('lg-grab');\n            }, 10);\n        };\n\n        var tapped = false;\n\n        // event triggered after appending slide content\n        _this.core.$el.on('onAferAppendSlide.lg.tm.zoom', function(event, index) {\n\n            // Get the current element\n            var $image = _this.core.$slide.eq(index).find('.lg-image');\n\n            $image.on('dblclick', function(event) {\n                actualSize(event, $image, index);\n            });\n\n            $image.on('touchstart', function(event) {\n                if (!tapped) {\n                    tapped = setTimeout(function() {\n                        tapped = null;\n                    }, 300);\n                } else {\n                    clearTimeout(tapped);\n                    tapped = null;\n                    actualSize(event, $image, index);\n                }\n\n                event.preventDefault();\n            });\n\n        });\n\n        // Update zoom on resize and orientationchange\n        $(window).on('resize.lg.zoom scroll.lg.zoom orientationchange.lg.zoom', function() {\n            _this.pageX = $(window).width() / 2;\n            _this.pageY = ($(window).height() / 2) + $(window).scrollTop();\n            zoom(scale);\n        });\n\n        $('#lg-zoom-out').on('click.lg', function() {\n            if (_this.core.$outer.find('.lg-current .lg-image').length) {\n                scale -= _this.core.s.scale;\n                callScale();\n            }\n        });\n\n        $('#lg-zoom-in').on('click.lg', function() {\n            if (_this.core.$outer.find('.lg-current .lg-image').length) {\n                scale += _this.core.s.scale;\n                callScale();\n            }\n        });\n\n        $('#lg-actual-size').on('click.lg', function(event) {\n            actualSize(event, _this.core.$slide.eq(_this.core.index).find('.lg-image'), _this.core.index, true);\n        });\n\n        // Reset zoom on slide change\n        _this.core.$el.on('onBeforeSlide.lg.tm', function() {\n            scale = 1;\n            _this.resetZoom();\n        });\n\n        // Drag option after zoom\n        _this.zoomDrag();\n\n        _this.zoomSwipe();\n\n    };\n\n    /**\n     * \n     * @param {Element} el \n     * @return matrix(cos(X), sin(X), -sin(X), cos(X), 0, 0);\n     * Get the current transform value\n     */\n    Zoom.prototype.getCurrentTransform = function (el) {\n        if (!el) {\n            return 0;\n        }\n        var st = window.getComputedStyle(el, null);\n        var tm = st.getPropertyValue('-webkit-transform') ||\n            st.getPropertyValue('-moz-transform') ||\n            st.getPropertyValue('-ms-transform') ||\n            st.getPropertyValue('-o-transform') ||\n            st.getPropertyValue('transform') ||\n            'none';\n        if (tm !== 'none') {\n            return tm.split('(')[1].split(')')[0].split(',');\n        }\n        return 0;\n    };\n\n    Zoom.prototype.getCurrentRotation = function (el) {\n        if (!el) {\n            return 0;\n        }\n        var values = this.getCurrentTransform(el);\n        if (values) {\n            return Math.round(Math.atan2(values[1], values[0]) * (180 / Math.PI));\n            // If you want rotate in 360\n            //return (angle < 0 ? angle + 360 : angle);\n        }\n        return 0;\n    };\n\n    Zoom.prototype.getModifier = function (rotateValue, axis, el) {\n        var originalRotate = rotateValue;\n        rotateValue = Math.abs(rotateValue);\n        var transformValues = this.getCurrentTransform(el);\n        if (!transformValues) {\n            return 1;\n        }\n        var modifier = 1;\n        if (axis === 'X') {\n            var flipHorizontalValue = Math.sign(parseFloat(transformValues[0]));\n            if (rotateValue === 0 || rotateValue === 180) {\n                modifier = 1;\n            } else if (rotateValue === 90) {\n                if ((originalRotate === -90 && flipHorizontalValue === 1) || (originalRotate === 90 && flipHorizontalValue === -1)) {\n                    modifier = -1;\n                } else {\n                    modifier = 1;\n                }\n            }\n            modifier = modifier * flipHorizontalValue;\n        } else {\n            var flipVerticalValue = Math.sign(parseFloat(transformValues[3]));\n            if (rotateValue === 0 || rotateValue === 180) {\n                modifier = 1;\n            } else if (rotateValue === 90) {\n                var sinX = parseFloat(transformValues[1]);\n                var sinMinusX = parseFloat(transformValues[2]);\n                modifier = Math.sign(sinX * sinMinusX * originalRotate * flipVerticalValue);\n            }\n            modifier = modifier * flipVerticalValue;\n        }\n        return modifier;\n    };\n\n    Zoom.prototype.getImageSize = function ($image, rotateValue, axis) {\n        var imageSizes = {\n            y: 'offsetHeight',\n            x: 'offsetWidth'\n        };\n        if (rotateValue === 90) {\n            // Swap axis \n            if (axis === 'x') {\n                axis = 'y';\n            } else {\n                axis = 'x';\n            }\n        }\n        return $image.prop(imageSizes[axis]);\n    };\n\n    Zoom.prototype.getDragCords = function (e, rotateValue) {\n        if (rotateValue === 90) {\n            return {\n                x: e.pageY,\n                y: e.pageX\n            };\n        } else {\n            return {\n                x: e.pageX,\n                y: e.pageY\n            };\n        }\n    };\n    Zoom.prototype.getSwipeCords = function (e, rotateValue) {\n        var x = e.originalEvent.targetTouches[0].pageX;\n        var y = e.originalEvent.targetTouches[0].pageY;\n        if (rotateValue === 90) {\n            return {\n                x: y,\n                y: x\n            };\n        } else {\n            return {\n                x: x,\n                y: y\n            };\n        }\n    };\n\n    Zoom.prototype.getPossibleDragCords = function ($image, rotateValue) {\n\n        var minY = (this.core.$outer.find('.lg').height() - this.getImageSize($image, rotateValue, 'y')) / 2;\n        var maxY = Math.abs((this.getImageSize($image, rotateValue, 'y') * Math.abs($image.attr('data-scale'))) - this.core.$outer.find('.lg').height() + minY);\n        var minX = (this.core.$outer.find('.lg').width() - this.getImageSize($image, rotateValue, 'x')) / 2;\n        var maxX = Math.abs((this.getImageSize($image, rotateValue, 'x') * Math.abs($image.attr('data-scale'))) - this.core.$outer.find('.lg').width() + minX);\n        if (rotateValue === 90) {\n            return {\n                minY: minX,\n                maxY: maxX,\n                minX: minY,\n                maxX: maxY,\n            };\n        } else {\n            return {\n                minY: minY,\n                maxY: maxY,\n                minX: minX,\n                maxX: maxX,\n            };\n        }\n    };\n\n    Zoom.prototype.getDragAllowedAxises = function ($image, rotateValue) {\n        var allowY = this.getImageSize($image, rotateValue, 'y') * $image.attr('data-scale') > this.core.$outer.find('.lg').height();\n        var allowX = this.getImageSize($image, rotateValue, 'x') * $image.attr('data-scale') > this.core.$outer.find('.lg').width();\n        if (rotateValue === 90) {\n            return {\n                allowX: allowY,\n                allowY: allowX\n            };\n        } else {\n            return {\n                allowX: allowX,\n                allowY: allowY\n            };\n        }\n    };\n\n    // Reset zoom effect\n    Zoom.prototype.resetZoom = function() {\n        this.core.$outer.removeClass('lg-zoomed');\n        this.core.$slide.find('.lg-img-wrap').removeAttr('style data-x data-y');\n        this.core.$slide.find('.lg-image').removeAttr('style data-scale');\n\n        // Reset pagx pagy values to center\n        this.pageX = $(window).width() / 2;\n        this.pageY = ($(window).height() / 2) + $(window).scrollTop();\n    };\n\n    Zoom.prototype.zoomSwipe = function() {\n        var _this = this;\n        var startCoords = {};\n        var endCoords = {};\n        var isMoved = false;\n\n        // Allow x direction drag\n        var allowX = false;\n\n        // Allow Y direction drag\n        var allowY = false;\n\n        var rotateValue = 0;\n        var rotateEl;\n\n        _this.core.$slide.on('touchstart.lg', function(e) {\n\n            if (_this.core.$outer.hasClass('lg-zoomed')) {\n                var $image = _this.core.$slide.eq(_this.core.index).find('.lg-object');\n\n                rotateEl = _this.core.$slide.eq(_this.core.index).find('.lg-img-rotate')[0];\n                rotateValue = _this.getCurrentRotation(rotateEl);    \n\n                var dragAllowedAxises = _this.getDragAllowedAxises($image, Math.abs(rotateValue));\n                allowY = dragAllowedAxises.allowY;\n                allowX = dragAllowedAxises.allowX;\n    \n                if ((allowX || allowY)) {\n                    e.preventDefault();\n                    startCoords = _this.getSwipeCords(e, Math.abs(rotateValue));\n                }\n            }\n\n        });\n\n        _this.core.$slide.on('touchmove.lg', function(e) {\n\n            if (_this.core.$outer.hasClass('lg-zoomed')) {\n\n                var _$el = _this.core.$slide.eq(_this.core.index).find('.lg-img-wrap');\n                var distanceX;\n                var distanceY;\n\n                e.preventDefault();\n                isMoved = true;\n\n                endCoords = _this.getSwipeCords(e, Math.abs(rotateValue));\n\n                // reset opacity and transition duration\n                _this.core.$outer.addClass('lg-zoom-dragging');\n\n                if (allowY) {\n                    distanceY = (-Math.abs(_$el.attr('data-y'))) + ((endCoords.y - startCoords.y) * _this.getModifier(rotateValue, 'Y', rotateEl));\n                } else {\n                    distanceY = -Math.abs(_$el.attr('data-y'));\n                }\n\n                if (allowX) {\n                    distanceX = (-Math.abs(_$el.attr('data-x'))) + ((endCoords.x - startCoords.x) * _this.getModifier(rotateValue, 'X', rotateEl));\n\n                } else {\n                    distanceX = -Math.abs(_$el.attr('data-x'));\n                }\n\n                if ((Math.abs(endCoords.x - startCoords.x) > 15) || (Math.abs(endCoords.y - startCoords.y) > 15)) {\n\n                    if (_this.core.s.useLeftForZoom) {\n                        _$el.css({\n                            left: distanceX + 'px',\n                            top: distanceY + 'px'\n                        });\n                    } else {\n                        _$el.css('transform', 'translate3d(' + distanceX + 'px, ' + distanceY + 'px, 0)');\n                    }\n                }\n\n            }\n\n        });\n\n        _this.core.$slide.on('touchend.lg', function() {\n            if (_this.core.$outer.hasClass('lg-zoomed')) {\n                if (isMoved) {\n                    isMoved = false;\n                    _this.core.$outer.removeClass('lg-zoom-dragging');\n                    _this.touchendZoom(startCoords, endCoords, allowX, allowY, rotateValue);\n\n                }\n            }\n        });\n\n    };\n\n    Zoom.prototype.zoomDrag = function() {\n\n        var _this = this;\n        var startCoords = {};\n        var endCoords = {};\n        var isDraging = false;\n        var isMoved = false;\n\n        // Allow x direction drag\n        var allowX = false;\n\n        // Allow Y direction drag\n        var allowY = false;\n\n        var rotateValue = 0;\n        var rotateEl;\n        \n        _this.core.$slide.on('mousedown.lg.zoom', function(e) {\n            rotateEl = _this.core.$slide.eq(_this.core.index).find('.lg-img-rotate')[0];\n            rotateValue = _this.getCurrentRotation(rotateEl);\n            // execute only on .lg-object\n            var $image = _this.core.$slide.eq(_this.core.index).find('.lg-object');\n            var dragAllowedAxises = _this.getDragAllowedAxises($image, Math.abs(rotateValue));\n            allowY = dragAllowedAxises.allowY;\n            allowX = dragAllowedAxises.allowX;\n\n            if (_this.core.$outer.hasClass('lg-zoomed')) {\n                if ($(e.target).hasClass('lg-object') && (allowX || allowY)) {\n                    e.preventDefault();\n                    startCoords = _this.getDragCords(e, Math.abs(rotateValue));\n\n                    isDraging = true;\n\n                    // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\n                    _this.core.$outer.scrollLeft += 1;\n                    _this.core.$outer.scrollLeft -= 1;\n\n                    _this.core.$outer.removeClass('lg-grab').addClass('lg-grabbing');\n                }\n            }\n        });\n\n        $(window).on('mousemove.lg.zoom', function(e) {\n            if (isDraging) {\n                var _$el = _this.core.$slide.eq(_this.core.index).find('.lg-img-wrap');\n                var distanceX;\n                var distanceY;\n\n                isMoved = true;\n                endCoords = _this.getDragCords(e, Math.abs(rotateValue));\n\n                // reset opacity and transition duration\n                _this.core.$outer.addClass('lg-zoom-dragging');\n\n                if (allowY) {\n                    distanceY = (-Math.abs(_$el.attr('data-y'))) + ((endCoords.y - startCoords.y) * _this.getModifier(rotateValue, 'Y', rotateEl));\n                } else {\n                    distanceY = -Math.abs(_$el.attr('data-y'));\n                }\n                \n                if (allowX) {\n                    distanceX = (-Math.abs(_$el.attr('data-x'))) + ((endCoords.x - startCoords.x) * _this.getModifier(rotateValue, 'X', rotateEl));\n                } else {\n                    distanceX = -Math.abs(_$el.attr('data-x'));\n                }\n\n                if (_this.core.s.useLeftForZoom) {\n                    _$el.css({\n                        left: distanceX + 'px',\n                        top: distanceY + 'px'\n                    });\n                } else {\n                    _$el.css('transform', 'translate3d(' + distanceX + 'px, ' + distanceY + 'px, 0)');\n                }\n            }\n        });\n\n        $(window).on('mouseup.lg.zoom', function(e) {\n\n            if (isDraging) {\n                isDraging = false;\n                _this.core.$outer.removeClass('lg-zoom-dragging');\n\n                // Fix for chrome mouse move on click\n                if (isMoved && ((startCoords.x !== endCoords.x) || (startCoords.y !== endCoords.y))) {\n                    endCoords = _this.getDragCords(e, Math.abs(rotateValue));\n                    _this.touchendZoom(startCoords, endCoords, allowX, allowY, rotateValue);\n\n                }\n\n                isMoved = false;\n            }\n\n            _this.core.$outer.removeClass('lg-grabbing').addClass('lg-grab');\n\n        });\n    };\n\n    Zoom.prototype.touchendZoom = function(startCoords, endCoords, allowX, allowY, rotateValue) {\n\n        var _this = this;\n        var _$el = _this.core.$slide.eq(_this.core.index).find('.lg-img-wrap');\n        var $image = _this.core.$slide.eq(_this.core.index).find('.lg-object');\n        var rotateEl = _this.core.$slide.eq(_this.core.index).find('.lg-img-rotate')[0];\n        var distanceX = (-Math.abs(_$el.attr('data-x'))) + ((endCoords.x - startCoords.x) * _this.getModifier(rotateValue, 'X', rotateEl));\n        var distanceY = (-Math.abs(_$el.attr('data-y'))) + ((endCoords.y - startCoords.y) * _this.getModifier(rotateValue, 'Y', rotateEl));\n        var possibleDragCords = _this.getPossibleDragCords($image, Math.abs(rotateValue));\n        if ((Math.abs(endCoords.x - startCoords.x) > 15) || (Math.abs(endCoords.y - startCoords.y) > 15)) {\n            if (allowY) {\n                if (distanceY <= -possibleDragCords.maxY) {\n                    distanceY = -possibleDragCords.maxY;\n                } else if (distanceY >= -possibleDragCords.minY) {\n                    distanceY = -possibleDragCords.minY;\n                }\n            }\n\n            if (allowX) {\n                if (distanceX <= -possibleDragCords.maxX) {\n                    distanceX = -possibleDragCords.maxX;\n                } else if (distanceX >= -possibleDragCords.minX) {\n                    distanceX = -possibleDragCords.minX;\n                }\n            }\n\n            if (allowY) {\n                _$el.attr('data-y', Math.abs(distanceY));\n            } else {\n                distanceY = -Math.abs(_$el.attr('data-y'));\n            }\n\n            if (allowX) {\n                _$el.attr('data-x', Math.abs(distanceX));\n            } else {\n                distanceX = -Math.abs(_$el.attr('data-x'));\n            }\n\n            if (_this.core.s.useLeftForZoom) {\n                _$el.css({\n                    left: distanceX + 'px',\n                    top: distanceY + 'px'\n                });\n            } else {\n                _$el.css('transform', 'translate3d(' + distanceX + 'px, ' + distanceY + 'px, 0)');\n            }\n\n        }\n    };\n\n    Zoom.prototype.destroy = function() {\n\n        var _this = this;\n\n        // Unbind all events added by lightGallery zoom plugin\n        _this.core.$el.off('.lg.zoom');\n        $(window).off('.lg.zoom');\n        _this.core.$slide.off('.lg.zoom');\n        _this.core.$el.off('.lg.tm.zoom');\n        _this.resetZoom();\n        clearTimeout(_this.zoomabletimeout);\n        _this.zoomabletimeout = false;\n    };\n\n    $.fn.lightGallery.modules.zoom = Zoom;\n\n});\n"]}