{"version":3,"sources":["modules/autoplay.js"],"names":["define","$","lightGallery","defaults","autoplay","pause","progressBar","fourceAutoplay","autoplayControls","appendAutoplayControlsTo","Autoplay","element","this","core","data","$el","$items","length","s","extend","interval","fromAuto","canceledOnTouch","fourceAutoplayTemp","doCss","init","prototype","_this","controls","$outer","find","append","progress","one","startlAuto","on","cancelAuto","_$progressBar","_$progress","removeAttr","removeClass","setTimeout","css","speed","addClass","hasClass","setInterval","index","slide","clearInterval","destroy","remove","fn","modules"],"mappings":"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","file":"../../modules/autoplay.js","sourcesContent":["define([\n    \"skylark-jquery\",\n    \"../light-gallery\"\n],function($,lightGallery){\n\n    'use strict';\n\n    var defaults = {\n        autoplay: false,\n        pause: 5000,\n        progressBar: true,\n        fourceAutoplay: false,\n        autoplayControls: true,\n        appendAutoplayControlsTo: '.lg-toolbar'\n    };\n\n    /**\n     * Creates the autoplay plugin.\n     * @param {object} element - lightGallery element\n     */\n    var Autoplay = function(element) {\n\n        this.core = $(element).data('lightGallery');\n\n        this.$el = $(element);\n\n        // Execute only if items are above 1\n        if (this.core.$items.length < 2) {\n            return false;\n        }\n\n        this.core.s = $.extend({}, defaults, this.core.s);\n        this.interval = false;\n\n        // Identify if slide happened from autoplay\n        this.fromAuto = true;\n\n        // Identify if autoplay canceled from touch/drag\n        this.canceledOnTouch = false;\n\n        // save fourceautoplay value\n        this.fourceAutoplayTemp = this.core.s.fourceAutoplay;\n\n        // do not allow progress bar if browser does not support css3 transitions\n        if (!this.core.doCss()) {\n            this.core.s.progressBar = false;\n        }\n\n        this.init();\n\n        return this;\n    };\n\n    Autoplay.prototype.init = function() {\n        var _this = this;\n\n        // append autoplay controls\n        if (_this.core.s.autoplayControls) {\n            _this.controls();\n        }\n\n        // Create progress bar\n        if (_this.core.s.progressBar) {\n            _this.core.$outer.find('.lg').append('<div class=\"lg-progress-bar\"><div class=\"lg-progress\"></div></div>');\n        }\n\n        // set progress\n        _this.progress();\n\n        // Start autoplay\n        if (_this.core.s.autoplay) {\n            _this.$el.one('onSlideItemLoad.lg.tm', function() {\n                _this.startlAuto();\n            });\n        }\n\n        // cancel interval on touchstart and dragstart\n        _this.$el.on('onDragstart.lg.tm touchstart.lg.tm', function() {\n            if (_this.interval) {\n                _this.cancelAuto();\n                _this.canceledOnTouch = true;\n            }\n        });\n\n        // restore autoplay if autoplay canceled from touchstart / dragstart\n        _this.$el.on('onDragend.lg.tm touchend.lg.tm onSlideClick.lg.tm', function() {\n            if (!_this.interval && _this.canceledOnTouch) {\n                _this.startlAuto();\n                _this.canceledOnTouch = false;\n            }\n        });\n\n    };\n\n    Autoplay.prototype.progress = function() {\n\n        var _this = this;\n        var _$progressBar;\n        var _$progress;\n\n        _this.$el.on('onBeforeSlide.lg.tm', function() {\n\n            // start progress bar animation\n            if (_this.core.s.progressBar && _this.fromAuto) {\n                _$progressBar = _this.core.$outer.find('.lg-progress-bar');\n                _$progress = _this.core.$outer.find('.lg-progress');\n                if (_this.interval) {\n                    _$progress.removeAttr('style');\n                    _$progressBar.removeClass('lg-start');\n                    setTimeout(function() {\n                        _$progress.css('transition', 'width ' + (_this.core.s.speed + _this.core.s.pause) + 'ms ease 0s');\n                        _$progressBar.addClass('lg-start');\n                    }, 20);\n                }\n            }\n\n            // Remove setinterval if slide is triggered manually and fourceautoplay is false\n            if (!_this.fromAuto && !_this.core.s.fourceAutoplay) {\n                _this.cancelAuto();\n            }\n\n            _this.fromAuto = false;\n\n        });\n    };\n\n    // Manage autoplay via play/stop buttons\n    Autoplay.prototype.controls = function() {\n        var _this = this;\n        var _html = '<button type=\"button\" aria-label=\"Toggle autoplay\" class=\"lg-autoplay-button lg-icon\"></button>';\n\n        // Append autoplay controls\n        $(this.core.s.appendAutoplayControlsTo).append(_html);\n\n        _this.core.$outer.find('.lg-autoplay-button').on('click.lg', function() {\n            if ($(_this.core.$outer).hasClass('lg-show-autoplay')) {\n                _this.cancelAuto();\n                _this.core.s.fourceAutoplay = false;\n            } else {\n                if (!_this.interval) {\n                    _this.startlAuto();\n                    _this.core.s.fourceAutoplay = _this.fourceAutoplayTemp;\n                }\n            }\n        });\n    };\n\n    // Autostart gallery\n    Autoplay.prototype.startlAuto = function() {\n        var _this = this;\n\n        _this.core.$outer.find('.lg-progress').css('transition', 'width ' + (_this.core.s.speed + _this.core.s.pause) + 'ms ease 0s');\n        _this.core.$outer.addClass('lg-show-autoplay');\n        _this.core.$outer.find('.lg-progress-bar').addClass('lg-start');\n\n        _this.interval = setInterval(function() {\n            if (_this.core.index + 1 < _this.core.$items.length) {\n                _this.core.index++;\n            } else {\n                _this.core.index = 0;\n            }\n\n            _this.fromAuto = true;\n            _this.core.slide(_this.core.index, false, false, 'next');\n        }, _this.core.s.speed + _this.core.s.pause);\n    };\n\n    // cancel Autostart\n    Autoplay.prototype.cancelAuto = function() {\n        clearInterval(this.interval);\n        this.interval = false;\n        this.core.$outer.find('.lg-progress').removeAttr('style');\n        this.core.$outer.removeClass('lg-show-autoplay');\n        this.core.$outer.find('.lg-progress-bar').removeClass('lg-start');\n    };\n\n    Autoplay.prototype.destroy = function() {\n\n        this.cancelAuto();\n        this.core.$outer.find('.lg-progress-bar').remove();\n    };\n\n    $.fn.lightGallery.modules.autoplay = Autoplay;\n\n});"]}