{"version":3,"sources":["modules/rotate.js"],"names":["define","$","lightGallery","defaults","rotate","rotateLeft","rotateRight","flipHorizontal","flipVertical","Rotate","element","this","core","data","s","extend","doCss","init","prototype","buildTemplates","rotateIcons","$outer","find","append","_this","rotateValuesList","$el","on","event","index","$slide","eq","wrap","bind","prevIndex","applyStyles","css","getCurrentRotation","el","st","window","getComputedStyle","tm","getPropertyValue","values","split","angle","Math","round","atan2","PI","$image","currentRotation","rotateAxis","destroy","off","fn","modules"],"mappings":"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","file":"../../modules/rotate.js","sourcesContent":["define([\n    \"skylark-jquery\",\n    \"../light-gallery\"\n],function($,lightGallery){\n    'use strict';\n\n    var defaults = {\n        rotate: true,\n        rotateLeft: true,\n        rotateRight: true,\n        flipHorizontal: true,\n        flipVertical: true,\n    };\n\n    var Rotate = function (element) {\n        this.core = $(element).data('lightGallery');\n\n        this.core.s = $.extend({}, defaults, this.core.s);\n\n        if (this.core.s.rotate && this.core.doCss()) {\n            this.init();\n        }\n\n        return this;\n    };\n\n    Rotate.prototype.buildTemplates = function () {\n        var rotateIcons = '';\n        if (this.core.s.flipVertical) {\n            rotateIcons += '<button aria-label=\"Flip vertical\" class=\"lg-flip-ver lg-icon\"></button>';\n        }\n        if (this.core.s.flipHorizontal) {\n            rotateIcons += '<button aria-label=\"flip horizontal\" class=\"lg-flip-hor lg-icon\"></button>';\n        }\n        if (this.core.s.rotateLeft) {\n            rotateIcons += '<button aria-label=\"Rotate left\" class=\"lg-rotate-left lg-icon\"></button>';\n        }\n        if (this.core.s.rotateRight) {\n            rotateIcons += '<button aria-label=\"Rotate right\" class=\"lg-rotate-right lg-icon\"></button>';\n        }\n        this.core.$outer.find('.lg-toolbar').append(rotateIcons);\n    };\n\n    Rotate.prototype.init = function () {\n        var _this = this;\n        this.buildTemplates();\n\n        // Save rotate config for each item to persist its rotate, flip values\n        // even after navigating to diferent slides\n        this.rotateValuesList = {};\n\n\n        // event triggered after appending slide content\n        this.core.$el.on('onAferAppendSlide.lg.tm.rotate', function (event, index) {\n            // Get the current element\n            var $imageWrap = _this.core.$slide.eq(index).find('.lg-img-wrap');\n            $imageWrap.wrap('<div class=\"lg-img-rotate\"></div>');\n        });\n\n        this.core.$outer\n            .find('.lg-rotate-left')\n            .on('click.lg', this.rotateLeft.bind(this));\n\n        this.core.$outer\n            .find('.lg-rotate-right')\n            .on('click.lg', this.rotateRight.bind(this));\n        this.core.$outer\n            .find('.lg-flip-hor')\n            .on('click.lg', this.flipHorizontal.bind(this));\n\n        this.core.$outer\n            .find('.lg-flip-ver')\n            .on('click.lg', this.flipVertical.bind(this));\n\n        // Reset rotate on slide change\n        this.core.$el.on('onBeforeSlide.lg.tm.rotate', function (event, prevIndex, index) {\n            if (!_this.rotateValuesList[index]) {\n                _this.rotateValuesList[index] = {\n                    rotate: 0,\n                    flipHorizontal: 1,\n                    flipVertical: 1,\n                };\n            }\n        });\n    };\n\n    Rotate.prototype.applyStyles = function () {\n        var $image = this.core.$slide.eq(this.core.index).find('.lg-img-rotate');\n        $image.css(\n            'transform',\n            'rotate(' + this.rotateValuesList[this.core.index].rotate + 'deg)' +\n            ' scale3d(' + this.rotateValuesList[this.core.index].flipHorizontal +\n            ', ' + this.rotateValuesList[this.core.index].flipVertical + ', 1)'\n        );\n    };\n\n    Rotate.prototype.getCurrentRotation = function (el) {\n        if (!el) {\n            return 0;\n        }\n        var st = window.getComputedStyle(el, null);\n        var tm = st.getPropertyValue('-webkit-transform') ||\n            st.getPropertyValue('-moz-transform') ||\n            st.getPropertyValue('-ms-transform') ||\n            st.getPropertyValue('-o-transform') ||\n            st.getPropertyValue('transform') ||\n            'none';\n        if (tm !== 'none') {\n            var values = tm.split('(')[1].split(')')[0].split(',');\n            if (values) {\n                var angle = Math.round(Math.atan2(values[1], values[0]) * (180 / Math.PI));\n                return (angle < 0 ? angle + 360 : angle);\n            }\n        }\n        return 0;\n    };\n\n    Rotate.prototype.rotateLeft = function () {\n        this.rotateValuesList[this.core.index].rotate -= 90;\n        this.applyStyles();\n    };\n\n    Rotate.prototype.rotateRight = function () {\n        this.rotateValuesList[this.core.index].rotate += 90;\n        this.applyStyles();\n    };\n\n    Rotate.prototype.flipHorizontal = function () {\n        var $image = this.core.$slide.eq(this.core.index).find('.lg-img-rotate')[0];\n        var currentRotation = this.getCurrentRotation($image);\n        var rotateAxis = 'flipHorizontal';\n        if (currentRotation === 90 || currentRotation === 270) {\n            rotateAxis = 'flipVertical';\n        }\n        this.rotateValuesList[this.core.index][rotateAxis] *= -1;\n        this.applyStyles();\n    };\n\n    Rotate.prototype.flipVertical = function () {\n        var $image = this.core.$slide.eq(this.core.index).find('.lg-img-rotate')[0];\n        var currentRotation = this.getCurrentRotation($image);\n        var rotateAxis = 'flipVertical';\n        if (currentRotation === 90 || currentRotation === 270) {\n            rotateAxis = 'flipHorizontal';\n        }\n        this.rotateValuesList[this.core.index][rotateAxis] *= -1;\n        this.applyStyles();\n    };\n\n    Rotate.prototype.destroy = function () {\n        // Unbind all events added by lightGallery rotate plugin\n        this.core.$el.off('.lg.tm.rotate');\n        this.rotateValuesList = {};\n    };\n\n    $.fn.lightGallery.modules.rotate = Rotate;\n});\n"]}