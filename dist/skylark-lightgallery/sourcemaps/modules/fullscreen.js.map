{"version":3,"sources":["modules/fullscreen.js"],"names":["define","$","lightGallery","defaults","fullScreen","isFullScreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","Fullscreen","element","this","core","data","$el","s","extend","init","prototype","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","$outer","find","append","requestFullscreen","el","documentElement","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","_this","on","toggleClass","destroy","off","fn","modules","fullscreen"],"mappings":";;;;;;;AAAAA,QACI,iBACA,oBACF,SAASC,EAAEC,GAET,aAEA,IAAIC,GACAC,YAAY,GAGhB,SAASC,IACL,OACIC,SAASC,mBACTD,SAASE,sBACTF,SAASG,yBACTH,SAASI,oBAIjB,IAAIC,EAAa,SAASC,GAYtB,OATAC,KAAKC,KAAOb,EAAEW,GAASG,KAAK,gBAE5BF,KAAKG,IAAMf,EAAEW,GAGbC,KAAKC,KAAKG,EAAIhB,EAAEiB,UAAWf,EAAUU,KAAKC,KAAKG,GAE/CJ,KAAKM,OAEEN,MAGXF,EAAWS,UAAUD,KAAO,WACxB,IAAIf,EAAa,GACjB,GAAIS,KAAKC,KAAKG,EAAEb,WAAY,CAGxB,KAAKE,SAASe,mBAAsBf,SAASgB,yBACxChB,SAASiB,sBAAyBjB,SAASkB,qBAC5C,OAEApB,EAAa,+FACbS,KAAKC,KAAKW,OAAOC,KAAK,eAAeC,OAAOvB,GAC5CS,KAAKT,eAKjBO,EAAWS,UAAUQ,kBAAoB,WACrC,IAAIC,EAAKvB,SAASwB,gBACdD,EAAGD,kBACHC,EAAGD,oBACIC,EAAGE,oBACVF,EAAGE,sBACIF,EAAGG,qBACVH,EAAGG,uBACIH,EAAGI,yBACVJ,EAAGI,2BAIXtB,EAAWS,UAAUc,eAAiB,WAC9B5B,SAAS4B,eACT5B,SAAS4B,iBACF5B,SAAS6B,iBAChB7B,SAAS6B,mBACF7B,SAAS8B,oBAChB9B,SAAS8B,sBACF9B,SAAS+B,sBAChB/B,SAAS+B,wBAKjB1B,EAAWS,UAAUhB,WAAa,WAC9B,IAAIkC,EAAQzB,KAEZZ,EAAEK,UAAUiC,GAAG,6FAA8F,WACzGD,EAAMxB,KAAKW,OAAOe,YAAY,sBAGlC3B,KAAKC,KAAKW,OAAOC,KAAK,kBAAkBa,GAAG,WAAY,WAC/ClC,IACAiC,EAAMJ,iBAENI,EAAMV,uBAMlBjB,EAAWS,UAAUqB,QAAU,WAGxBpC,KACCQ,KAAKqB,iBAGTjC,EAAEK,UAAUoC,IAAI,+FAGpBzC,EAAE0C,GAAGzC,aAAa0C,QAAQC,WAAalC","file":"../../modules/fullscreen.js","sourcesContent":["define([\n    \"skylark-jquery\",\n    \"../light-gallery\"\n],function($,lightGallery){\n\n    'use strict';\n\n    var defaults = {\n        fullScreen: true\n    };\n\n    function isFullScreen() {\n        return (\n            document.fullscreenElement ||\n            document.mozFullScreenElement ||\n            document.webkitFullscreenElement ||\n            document.msFullscreenElement\n        );\n    }\n\n    var Fullscreen = function(element) {\n\n        // get lightGallery core plugin data\n        this.core = $(element).data('lightGallery');\n\n        this.$el = $(element);\n\n        // extend module defalut settings with lightGallery core settings\n        this.core.s = $.extend({}, defaults, this.core.s);\n\n        this.init();\n\n        return this;\n    };\n\n    Fullscreen.prototype.init = function() {\n        var fullScreen = '';\n        if (this.core.s.fullScreen) {\n\n            // check for fullscreen browser support\n            if (!document.fullscreenEnabled && !document.webkitFullscreenEnabled &&\n                !document.mozFullScreenEnabled && !document.msFullscreenEnabled) {\n                return;\n            } else {\n                fullScreen = '<button type=\"button\" aria-label=\"Toggle fullscreen\" class=\"lg-fullscreen lg-icon\"></button>';\n                this.core.$outer.find('.lg-toolbar').append(fullScreen);\n                this.fullScreen();\n            }\n        }\n    };\n\n    Fullscreen.prototype.requestFullscreen = function() {\n        var el = document.documentElement;\n        if (el.requestFullscreen) {\n            el.requestFullscreen();\n        } else if (el.msRequestFullscreen) {\n            el.msRequestFullscreen();\n        } else if (el.mozRequestFullScreen) {\n            el.mozRequestFullScreen();\n        } else if (el.webkitRequestFullscreen) {\n            el.webkitRequestFullscreen();\n        }\n    };\n\n    Fullscreen.prototype.exitFullscreen = function() {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n    };\n\n    // https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Using_full_screen_mode\n    Fullscreen.prototype.fullScreen = function() {\n        var _this = this;\n\n        $(document).on('fullscreenchange.lg webkitfullscreenchange.lg mozfullscreenchange.lg MSFullscreenChange.lg', function() {\n            _this.core.$outer.toggleClass('lg-fullscreen-on');\n        });\n\n        this.core.$outer.find('.lg-fullscreen').on('click.lg', function() {\n            if (isFullScreen()) {\n                _this.exitFullscreen();\n            } else {\n                _this.requestFullscreen();\n            }\n        });\n\n    };\n\n    Fullscreen.prototype.destroy = function() {\n\n        // exit from fullscreen if activated\n        if(isFullScreen()) {\n            this.exitFullscreen();\n        }\n\n        $(document).off('fullscreenchange.lg webkitfullscreenchange.lg mozfullscreenchange.lg MSFullscreenChange.lg');\n    };\n\n    $.fn.lightGallery.modules.fullscreen = Fullscreen;\n\n});\n"]}